{
  "version": 3,
  "sources": ["../../../slices/main/assets/js/gallery.js", "../../../slices/main/assets/js/app.ts"],
  "sourcesContent": ["/*\nMarkdown Gallery\n-- v1.0 2016\n-- Created by Lee Penney\n-- Released under GPLv3\n*/\n\nexport function md_gallery(config) {\n    var config = config || {},\n        list_type = config.list_type || 'ul',\n        class_name = config.class_name || 'gallery',\n        tag_type = config.tag_type || 'div';\n\n    function find_lists(list_type) {\n        var lists = document.getElementsByTagName(list_type), matching_lists = [];\n        for (var i = 0; i < lists.length; i++) {\n            var list_elements = lists[i].children;\n            var total_matches = 0;\n            for (var c = 0; c < list_elements.length; c++) {\n                if (!list_elements[c].textContent.length && (list_elements[c].firstChild.tagName == 'A' || list_elements[c].firstChild.tagName == 'IMG') && (!list_elements[c].firstChild.firstChild || (list_elements[c].firstChild.firstChild && list_elements[c].firstChild.firstChild.tagName == 'IMG') )) {\n                    total_matches++;\n                }\n            }\n            if (total_matches == list_elements.length) {\n                matching_lists[matching_lists.length] = lists[i];\n            }\n        }\n        return matching_lists;\n    }\n\n    function prepend_tag(img_lists, list_tag, prepend_tag, class_name) {\n        for (var i = 0; i < img_lists.length; i++) {\n            // add_figure_tags(img_lists[i]);\n            add_anchor(img_lists[i]);\n            wrap_tag(img_lists[i], prepend_tag, class_name, null, true);\n            strip_tag(img_lists[i], 'li');\n            strip_tag(img_lists[i].parentNode, list_tag);\n        }\n    }\n\n    function append_caption(el) {\n        if ((el.tagName == 'A' && el.firstChild.tagName == 'IMG' && el.firstChild.hasAttribute('alt') && el.firstChild.getAttribute('alt').length > 0) || (el.tagName == 'IMG' && el.hasAttribute('alt') && el.getAttribute('alt').length > 0)) {\n            var caption = document.createElement('figcaption');\n            try {\n                caption.textContent = el.firstChild.getAttribute('alt')\n                el.appendChild(caption);\n            } catch (e) {\n                caption.textContent = el.getAttribute('alt');\n                el.parentNode.appendChild(caption);\n            }\n        }\n    }\n\n    function strip_tag(el, tag_type) {\n        var start_tag_regex = new RegExp('<'+tag_type+'>', 'gi');\n        var end_tag_regex = new RegExp('<\\/'+tag_type+'>', 'gi');\n        el.innerHTML = el.innerHTML.replace(start_tag_regex,'').replace(end_tag_regex,'');\n    }\n\n    function add_figure_tags(img_list) {\n        var list_elements = img_list.children;\n        for (var i = 0; i < list_elements.length; i++) {\n            append_caption(list_elements[i].firstChild);\n            wrap_tag(list_elements[i], 'figure');\n        }\n    }\n\n    function add_anchor(img_list) {\n        var list_elements = img_list.children;\n        for (var i = 0; i < list_elements.length; i++) {\n            let img = list_elements[i].getElementsByTagName('img')[0];\n            let src = img.getAttribute(\"src\");\n            let alt = img.getAttribute(\"alt\");\n            wrap_tag(list_elements[i],\n                'a',\n                'hover:cursor-pointer',\n                \"$dispatch('img-modal', {  imgModalSrc: '\" + src + \"', imgModalDesc: '\" + alt + \"' })\",\n                false\n                );\n        }\n    }\n\n    function wrap_tag(el, tag_type, class_name, click, root) {\n        var wrap = document.createElement(tag_type);\n        if (root) {\n            wrap.setAttribute('x-data', \"{}\");\n        }\n        if (class_name) {\n            wrap.setAttribute('class', class_name);\n        }\n        if (click) {\n            wrap.setAttribute('x-on:click.prevent', click);\n            wrap.setAttribute('href', '#');\n        }\n        el.parentNode.replaceChild(wrap, el);\n        wrap.appendChild(el);\n    }\n\n    var found_img_lists = find_lists(list_type);\n    if (found_img_lists.length) {\n        prepend_tag(found_img_lists, list_type, tag_type, class_name);\n    }\n}", "import \"@app/builds/tailwind.css\";\nimport \"@main/css/app.css\";\nimport { md_gallery } from \"./gallery.js\";\n\n(function () {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", (event) => {\n        localStorage.setItem(\"_x_darkMode\", event.matches ? true : false);\n      });\n\n    if (window.hljs !== undefined) {\n      window.hljs.highlightAll();\n    }\n\n    const homeTime = document.querySelector(\".home-time\");\n    if (homeTime != undefined) {\n      function updateTime() {\n        const australianTimeZone = \"Australia/Canberra\";\n\n        const currentTime = new Date().toLocaleTimeString(\"en-AU\", {\n          timeZone: australianTimeZone,\n          hour12: true,\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          second: \"2-digit\",\n        });\n        homeTime.textContent = currentTime;\n      }\n\n      updateTime();\n\n      setInterval(updateTime, 1000);\n    }\n\n    const times = document.querySelectorAll(\"time\");\n    times.forEach((time) => {\n      const oldDtime = Date.parse(time.dateTime);\n      time.innerHTML = new Date(oldDtime).toLocaleDateString(\n        navigator.language,\n        { weekday: \"long\", year: \"numeric\", month: \"short\", day: \"numeric\" },\n      );\n\n      md_gallery({\n        class_name: \"grid gap-4 grid-cols-2 prose-img:m-0\",\n      });\n\n      const mediaForm = document.getElementById(\"media_form\");\n      if (mediaForm !== null) {\n        htmx.on(\"#media_form\", \"htmx:xhr:progress\", function (evt) {\n          htmx\n            .find(\"#progress\")\n            .setAttribute(\n              \"value\",\n              (evt.detail.loaded / evt.detail.total) * 100,\n            );\n        });\n      }\n    });\n\n    const videos = document.querySelectorAll(\"video\");\n    videos.forEach((video) => {\n      video.addEventListener(\"click\", () => {\n        const isPaused = video.paused;\n        video[isPaused ? \"play\" : \"pause\"]();\n        video.classList.toggle(\"u-none\", !isPaused);\n      });\n    });\n\n    const mapContainer = document.getElementById(\"map\");\n    const goBack = document.getElementById(\"go-back\");\n    if (mapContainer !== null) {\n      if (goBack !== null) {\n        document.getElementById(\"go-back\").addEventListener(\"click\", () => {\n          history.back();\n        });\n      }\n\n      mapboxgl.accessToken =\n        \"pk.eyJ1IjoiZG5pdHphIiwiYSI6ImNsZWIyY3ZzaTE0cjUzdm4xdnZ6czRlYjUifQ.FRETOXYRID6T2IoB7qqRLg\";\n      var map = new mapboxgl.Map({\n        container: \"map\",\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        maxZoom: 8,\n      });\n\n      const markers = JSON.parse(mapContainer.dataset[\"markers\"]);\n\n      const bounds = new mapboxgl.LngLatBounds(markers[0], markers[0]);\n\n      for (var i = 0; i < markers.length; i++) {\n        bounds.extend(markers[i]);\n      }\n\n      map.fitBounds(bounds, { padding: 60 });\n\n      for (var i = 0; i < markers.length; i++) {\n        const marker = markers[i];\n        const el = document.createElement(\"div\");\n        el.className = \"map-marker\";\n\n        new mapboxgl.Marker(el).setLngLat(marker).addTo(map);\n      }\n    }\n  });\n})();\n"],
  "mappings": "MAOO,SAASA,EAAWC,EAAQ,CAC/B,IAAIA,EAASA,GAAU,CAAC,EACpBC,EAAYD,EAAO,WAAa,KAChCE,EAAaF,EAAO,YAAc,UAClCG,EAAWH,EAAO,UAAY,MAElC,SAASI,EAAWH,EAAW,CAE3B,QADII,EAAQ,SAAS,qBAAqBJ,CAAS,EAAGK,EAAiB,CAAC,EAC/DC,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAAK,CAGnC,QAFIC,EAAgBH,EAAME,CAAC,EAAE,SACzBE,EAAgB,EACXC,EAAI,EAAGA,EAAIF,EAAc,OAAQE,IAClC,CAACF,EAAcE,CAAC,EAAE,YAAY,SAAWF,EAAcE,CAAC,EAAE,WAAW,SAAW,KAAOF,EAAcE,CAAC,EAAE,WAAW,SAAW,SAAW,CAACF,EAAcE,CAAC,EAAE,WAAW,YAAeF,EAAcE,CAAC,EAAE,WAAW,YAAcF,EAAcE,CAAC,EAAE,WAAW,WAAW,SAAW,QACjRD,IAGJA,GAAiBD,EAAc,SAC/BF,EAAeA,EAAe,MAAM,EAAID,EAAME,CAAC,EAEvD,CACA,OAAOD,CACX,CAEA,SAASK,EAAYC,EAAWC,EAAUF,EAAaT,EAAY,CAC/D,QAASK,EAAI,EAAGA,EAAIK,EAAU,OAAQL,IAElCO,EAAWF,EAAUL,CAAC,CAAC,EACvBQ,EAASH,EAAUL,CAAC,EAAGI,EAAaT,EAAY,KAAM,EAAI,EAC1Dc,EAAUJ,EAAUL,CAAC,EAAG,IAAI,EAC5BS,EAAUJ,EAAUL,CAAC,EAAE,WAAYM,CAAQ,CAEnD,CAEA,SAASI,EAAeC,EAAI,CACxB,GAAKA,EAAG,SAAW,KAAOA,EAAG,WAAW,SAAW,OAASA,EAAG,WAAW,aAAa,KAAK,GAAKA,EAAG,WAAW,aAAa,KAAK,EAAE,OAAS,GAAOA,EAAG,SAAW,OAASA,EAAG,aAAa,KAAK,GAAKA,EAAG,aAAa,KAAK,EAAE,OAAS,EAAI,CACpO,IAAIC,EAAU,SAAS,cAAc,YAAY,EACjD,GAAI,CACAA,EAAQ,YAAcD,EAAG,WAAW,aAAa,KAAK,EACtDA,EAAG,YAAYC,CAAO,CAC1B,MAAY,CACRA,EAAQ,YAAcD,EAAG,aAAa,KAAK,EAC3CA,EAAG,WAAW,YAAYC,CAAO,CACrC,CACJ,CACJ,CAEA,SAASH,EAAUE,EAAIf,EAAU,CAC7B,IAAIiB,EAAkB,IAAI,OAAO,IAAIjB,EAAS,IAAK,IAAI,EACnDkB,EAAgB,IAAI,OAAO,KAAMlB,EAAS,IAAK,IAAI,EACvDe,EAAG,UAAYA,EAAG,UAAU,QAAQE,EAAgB,EAAE,EAAE,QAAQC,EAAc,EAAE,CACpF,CAEA,SAASC,EAAgBC,EAAU,CAE/B,QADIf,EAAgBe,EAAS,SACpBhB,EAAI,EAAGA,EAAIC,EAAc,OAAQD,IACtCU,EAAeT,EAAcD,CAAC,EAAE,UAAU,EAC1CQ,EAASP,EAAcD,CAAC,EAAG,QAAQ,CAE3C,CAEA,SAASO,EAAWS,EAAU,CAE1B,QADIf,EAAgBe,EAAS,SACpBhB,EAAI,EAAGA,EAAIC,EAAc,OAAQD,IAAK,CAC3C,IAAIiB,EAAMhB,EAAcD,CAAC,EAAE,qBAAqB,KAAK,EAAE,CAAC,EACpDkB,EAAMD,EAAI,aAAa,KAAK,EAC5BE,EAAMF,EAAI,aAAa,KAAK,EAChCT,EAASP,EAAcD,CAAC,EACpB,IACA,uBACA,2CAA6CkB,EAAM,qBAAuBC,EAAM,OAChF,EACA,CACR,CACJ,CAEA,SAASX,EAASG,EAAIf,EAAUD,EAAYyB,EAAOC,EAAM,CACrD,IAAIC,EAAO,SAAS,cAAc1B,CAAQ,EACtCyB,GACAC,EAAK,aAAa,SAAU,IAAI,EAEhC3B,GACA2B,EAAK,aAAa,QAAS3B,CAAU,EAErCyB,IACAE,EAAK,aAAa,qBAAsBF,CAAK,EAC7CE,EAAK,aAAa,OAAQ,GAAG,GAEjCX,EAAG,WAAW,aAAaW,EAAMX,CAAE,EACnCW,EAAK,YAAYX,CAAE,CACvB,CAEA,IAAIY,EAAkB1B,EAAWH,CAAS,EACtC6B,EAAgB,QAChBnB,EAAYmB,EAAiB7B,EAAWE,EAAUD,CAAU,CAEpE,EClGC,UAAY,CACX,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,OACG,WAAW,8BAA8B,EACzC,iBAAiB,SAAW6B,GAAU,CACrC,aAAa,QAAQ,cAAe,EAAAA,EAAM,OAAsB,CAClE,CAAC,EAEC,OAAO,OAAS,QAClB,OAAO,KAAK,aAAa,EAG3B,IAAMC,EAAW,SAAS,cAAc,YAAY,EACpD,GAAIA,GAAY,KAAW,CACzB,IAASC,EAAT,UAAsB,CAGpB,IAAMC,EAAc,IAAI,KAAK,EAAE,mBAAmB,QAAS,CACzD,SAHyB,qBAIzB,OAAQ,GACR,KAAM,UACN,OAAQ,UACR,OAAQ,SACV,CAAC,EACDF,EAAS,YAAcE,CACzB,EAEAD,EAAW,EAEX,YAAYA,EAAY,GAAI,CAC9B,CAEc,SAAS,iBAAiB,MAAM,EACxC,QAASE,GAAS,CACtB,IAAMC,EAAW,KAAK,MAAMD,EAAK,QAAQ,EACzCA,EAAK,UAAY,IAAI,KAAKC,CAAQ,EAAE,mBAClC,UAAU,SACV,CAAE,QAAS,OAAQ,KAAM,UAAW,MAAO,QAAS,IAAK,SAAU,CACrE,EAEAC,EAAW,CACT,WAAY,sCACd,CAAC,EAEiB,SAAS,eAAe,YAAY,IACpC,MAChB,KAAK,GAAG,cAAe,oBAAqB,SAAUC,EAAK,CACzD,KACG,KAAK,WAAW,EAChB,aACC,QACCA,EAAI,OAAO,OAASA,EAAI,OAAO,MAAS,GAC3C,CACJ,CAAC,CAEL,CAAC,EAEc,SAAS,iBAAiB,OAAO,EACzC,QAASC,GAAU,CACxBA,EAAM,iBAAiB,QAAS,IAAM,CACpC,IAAMC,EAAWD,EAAM,OACvBA,EAAMC,EAAW,OAAS,OAAO,EAAE,EACnCD,EAAM,UAAU,OAAO,SAAU,CAACC,CAAQ,CAC5C,CAAC,CACH,CAAC,EAED,IAAMC,EAAe,SAAS,eAAe,KAAK,EAC5CC,EAAS,SAAS,eAAe,SAAS,EAChD,GAAID,IAAiB,KAAM,CACrBC,IAAW,MACb,SAAS,eAAe,SAAS,EAAE,iBAAiB,QAAS,IAAM,CACjE,QAAQ,KAAK,CACf,CAAC,EAGH,SAAS,YACP,2FACF,IAAIC,EAAM,IAAI,SAAS,IAAI,CACzB,UAAW,MACX,MAAO,qCACP,QAAS,CACX,CAAC,EAED,IAAMC,EAAU,KAAK,MAAMH,EAAa,QAAQ,OAAU,EAEpDI,EAAS,IAAI,SAAS,aAAaD,EAAQ,CAAC,EAAGA,EAAQ,CAAC,CAAC,EAE/D,QAASE,EAAI,EAAGA,EAAIF,EAAQ,OAAQE,IAClCD,EAAO,OAAOD,EAAQE,CAAC,CAAC,EAG1BH,EAAI,UAAUE,EAAQ,CAAE,QAAS,EAAG,CAAC,EAErC,QAASC,EAAI,EAAGA,EAAIF,EAAQ,OAAQE,IAAK,CACvC,IAAMC,EAASH,EAAQE,CAAC,EAClBE,EAAK,SAAS,cAAc,KAAK,EACvCA,EAAG,UAAY,aAEf,IAAI,SAAS,OAAOA,CAAE,EAAE,UAAUD,CAAM,EAAE,MAAMJ,CAAG,CACrD,CACF,CACF,CAAC,CACH,GAAG",
  "names": ["md_gallery", "config", "list_type", "class_name", "tag_type", "find_lists", "lists", "matching_lists", "i", "list_elements", "total_matches", "c", "prepend_tag", "img_lists", "list_tag", "add_anchor", "wrap_tag", "strip_tag", "append_caption", "el", "caption", "start_tag_regex", "end_tag_regex", "add_figure_tags", "img_list", "img", "src", "alt", "click", "root", "wrap", "found_img_lists", "event", "homeTime", "updateTime", "currentTime", "time", "oldDtime", "md_gallery", "evt", "video", "isPaused", "mapContainer", "goBack", "map", "markers", "bounds", "i", "marker", "el"]
}
